name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Derive version from tag
        id: version
        run: echo "TAG_VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT
      - name: Set package version
        run: |
          node -e "const fs=require('fs');const f='package.json';const j=JSON.parse(fs.readFileSync(f));j.version='${{ steps.version.outputs.TAG_VERSION }}';fs.writeFileSync(f, JSON.stringify(j,null,2)+'\n');"
      - name: Generate Changelog (standard-version)
        run: npx standard-version --release-as ${{ steps.version.outputs.TAG_VERSION }} --skip.tag --skip.commit
      - name: Lint
        run: npm run lint
      - name: Compile
        run: npm run compile
      - name: Package Extension
        run: npx vsce package --no-dependencies
      - name: Rename artifact
        run: |
          FILE=$(ls *.vsix | head -n 1)
          mv "$FILE" snippetshot-${GITHUB_REF_NAME}.vsix
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: snippetshot-${{ github.ref_name }}
          path: snippetshot-${{ github.ref_name }}.vsix
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: snippetshot-${{ github.ref_name }}.vsix
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
